name: release

on:
  pull_request:
    paths:
    - '.github/workflows/release.yml'
    - 'scripts/create_spec_repo/*'
  schedule:
    # Run every day at 11pm (PST) - cron uses UTC times
    - cron:  '0 7 * * *'

jobs:
  buildup_SpecsTesting_repo:
    # Don't run on private repo unless it is a PR.
    if: github.repository != 'FirebasePrivate/firebase-ios-sdk' || github.event_name == 'pull_request'
    env:
      bot_token_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      local_repo: specstesting
      local_sdk_repo_dir: /tmp/test/firebase-ios-sdk
      podspec_repo_branch: master
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get token
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/bot-access.txt.gpg \
          bot-access.txt "$bot_token_secret"
    - name: Update SpecStaging repo setup
      run: scripts/release_testing_setup.sh
    - name: Update SpecStaging repo
      run: |
        botaccess=`cat bot-access.txt`
        cd scripts/create_spec_repo/
        swift build
        pod repo add --silent "${local_repo}" https://"$botaccess"@github.com/FirebasePrivate/SpecsTesting.git
        BOT_TOKEN="${botaccess}"  .build/debug/SpecRepoBuilder --sdk_repo "${local_sdk_repo_dir}" --local_spec_repo_name "${local_repo}"
    - name: Clean Artifacts
      if: ${{ always() }}
      run: |
        pod repo remove "${local_repo}"
        rm -rf bot-access.txt
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: firebase-ios-sdk
        path: /tmp/test/firebase-ios-sdk

  quickstart_release_test:
    # Don't run on private repo unless it is a PR.
    if: github.repository != 'FirebasePrivate/firebase-ios-sdk' || github.event_name == 'pull_request'
    needs: buildup_SpecsTesting_repo
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      bot_token_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      testing_repo_dir: "/tmp/test/"
      testing_repo: "firebase-ios-sdk"
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get token
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/bot-access.txt.gpg \
          bot-access.txt "$bot_token_secret"
    - name: Get testing podspec repo
      uses: actions/download-artifact@v1
      with:
        name: firebase-ios-sdk
    - name: Setup testing repo and quickstart
      run: |
          mkdir -p "${testing_repo_dir}"
          mv "${GITHUB_WORKSPACE}/${testing_repo}" "${testing_repo_dir}"
          botaccess=`cat bot-access.txt`
          BOT_TOKEN="${botaccess}" scripts/setup_quickstart.sh config release_testing
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-config.plist.gpg \
          quickstart-ios/config/GoogleService-Info.plist "$plist_secret"
    - name: Install Secret FIREGSignInInfo.h
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/FIREGSignInInfo.h.gpg \
          quickstart-ios/TestUtils/FIREGSignInInfo.h "$signin_secret"
    - name: Test Swift Quickstart
      run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Config)
    - name: Remove data before upload
      run: scripts/remove_data.sh config release_testing
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: quickstart_artifacts_config
        path: quickstart-ios/
